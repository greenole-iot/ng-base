{"version":3,"file":"alis-ng-base.js","sources":["../../../projects/ng-base-lib/src/lib/aurion2/model/trace.ts","../../../projects/ng-base-lib/src/lib/aurion2/model/event.ts","../../../projects/ng-base-lib/src/lib/properties.service.ts","../../../projects/ng-base-lib/src/lib/aurion2/state.service.ts","../../../projects/ng-base-lib/src/lib/aurion2/structure.service.ts","../../../projects/ng-base-lib/src/lib/aurion2/tracking-websocket.service.ts","../../../projects/ng-base-lib/src/lib/aurion2/event-websocket.service.ts","../../../projects/ng-base-lib/src/lib/aurion2/tracking.service.ts","../../../projects/ng-base-lib/src/lib/aurion2/event.service.ts","../../../projects/ng-base-lib/src/lib/auth0-auth.service.ts","../../../projects/ng-base-lib/src/lib/ng-base-lib.module.ts","../../../projects/ng-base-lib/src/public-api.ts","../../../projects/ng-base-lib/src/alis-ng-base.ts"],"sourcesContent":["export class Trace {\n  domainId: string//\"aurion-copapalace\";\n  timespan: string//\"198302\";\n  traceType: string//\"light\";\n  objectId: string//\"lutron-20_62_24_24\";\n  timestamp: number//415249200000;\n  subDomainId: string//\"room_101\";\n  tags: string[]//[\"vip\"];\n  //data: any//{ \"power\": \"on\", \"status\": \"ok\" };\n  //metrics: any//{ \"dimmer\": 100, \"energy_consumption\": 1526771 }\n}\n","export class Event {\n  objectId: string;\n  domainId: string;\n  subDomainId: string;\n  processId: string;\n  executionId: string;\n  eventType: string;\n  subject: string;\n  description: string;\n  domainData: any;\n  timestamp: string;\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { Observable, throwError as observableThrowError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PropertiesService {\n\n  private static readonly DEFAULT_APP_CONFIG_PATH = \"assets/appConfig.properties.json\";\n\n  public static properties: any = null;\n\n  constructor(@Optional() @Inject('propertiesUrl') private propertiesUrl: string, private http: HttpClient) {\n\n    if (this.propertiesUrl == null) {\n      this.propertiesUrl = PropertiesService.DEFAULT_APP_CONFIG_PATH;\n      console.info(\"Did not receive propertiesUrl path. Using default as '\" + this.propertiesUrl + \"'\");\n    } else {\n      console.info(\"Received propertiesUrl path as '\" + this.propertiesUrl + \"'\");\n    }\n  }\n\n  setPropertiesUrl(propertiesUrl: string) {\n    this.propertiesUrl = propertiesUrl;\n    console.info(\"PropertiesUrl has been set to: \" + propertiesUrl);\n  }\n\n  readProperties(path: string): Observable<any> {\n    return this.http.get(path).pipe(catchError((e: any) => {\n      console.error(\"ERROR: Properties file \" + path + \" not found.\");\n      return observableThrowError(e);\n    }));\n  }\n\n  /**\n   * try to get properties url inject in final app\n   * in case it is missing, we will use DEFAULT_APP_CONFIG_PATH\n   */\n  getAppConfig(): Observable<any> {\n    return this.readProperties(this.propertiesUrl);\n  }\n\n  readAllProperties(): Observable<void> {\n    return this.readProperties(this.propertiesUrl).pipe(map(properties => {\n      PropertiesService.properties = properties;\n    }));\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport * as _ from 'lodash-es';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PropertiesService } from '../properties.service';\nimport { Trace } from './model/trace';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateService {\n\n  constructor(private http: HttpClient) { }\n\n  list(domainId: string, traceType: string): Observable<Trace[]> {\n    let host = PropertiesService.properties.aurionTrack;\n    let url = `${host}/state/${domainId}/${traceType}`\n    return this.http.get<Trace[]>(url);\n  }\n\n  get(domainId: string, traceType: string, objectId: string): Observable<Trace> {\n    let host = PropertiesService.properties.aurionTrack;\n    let url = `${host}/state/${domainId}/${traceType}/${objectId}`\n    return this.http.get<Trace>(url);\n  }\n\n  // getByDomains(domains: string[]): Observable<Trace[]> {\n  //   if (PropertiesService.properties.trackingsmock) {\n  //     return this.http.get<Trace[]>(PropertiesService.properties.trackingsmock).pipe(map(traces => {\n  //       traces = traces.filter(item => domains.indexOf(item.domainId) != -1);\n  //       let grouped = _.groupBy(traces, trace => trace.objectId);\n  //       let states = Object.keys(grouped).map(key => grouped[key]).map(group => group.sort((o1, o2) => o2.timestamp - o1.timestamp)[0]);\n  //       return states;\n  //     }));\n  //   }\n  // }\n\n  searchExecutionsByProcess(domainId: string, traceType: string, objectId: string): Observable<Trace[]> {\n      let host = PropertiesService.properties.aurionTrack;\n      let url = `${host}/state/${domainId}/${traceType}?search=processId.eq:${objectId}&sort=timestamp:asc`\n      return this.http.get<Trace[]>(url);\n  }\n\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { PropertiesService } from '../properties.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StructureService {\n\n  constructor(private http: HttpClient) { }\n\n  structuresMockCache: any[];\n\n  get(): Observable<any[]> {\n    if (PropertiesService.properties.structuresmock) {\n      if (this.structuresMockCache) {\n        return of(this.structuresMockCache);\n      }\n      return this.http.get<any[]>(PropertiesService.properties.structuresmock).pipe(tap(res => {\n        this.structuresMockCache = res;\n      }));\n    }\n  }\n\n  set(structure: any): Observable<any> {\n    if (PropertiesService.properties.structuresmock) {\n      if (!this.structuresMockCache) {\n        this.structuresMockCache = [];\n      }\n      let idx = this.structuresMockCache.findIndex(item => item.id == structure.id);\n      if (idx != -1) {\n        this.structuresMockCache.splice(idx, 0, structure);\n      } else {\n        this.structuresMockCache.push(structure);\n      }\n      return of(1);\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket';\nimport { PropertiesService } from '../properties.service';\nimport { Trace } from './model/trace';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TrackingWebsocketService {\n\n  constructor() { }\n\n  myWebSocket: WebSocketSubject<Trace>;\n\n  connect(message): WebSocketSubject<Trace> {\n    let url = PropertiesService.properties.trackingwebsocket;\n    this.myWebSocket = webSocket(url);\n    if (message != null) {\n      this.myWebSocket.next(message);\n    }\n    return this.myWebSocket;\n  }\n\n  disconnect() {\n    if(this.myWebSocket){\n      this.myWebSocket.complete();\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket';\nimport { PropertiesService } from '../properties.service';\nimport { Event } from './model/event';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventWebsocketService {\n\n  constructor() { }\n\n  myWebSocket: WebSocketSubject<Event>;\n\n  connect(message): WebSocketSubject<Event> {\n    let url = PropertiesService.properties.eventwebsocket;\n    this.myWebSocket = webSocket(url);\n    if (message != null) {\n      this.myWebSocket.next(message);\n    }\n    return this.myWebSocket;\n  }\n\n  disconnect() {\n    this.myWebSocket.complete();\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport * as _ from 'lodash-es';\nimport { Observable, of } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { PropertiesService } from '../properties.service';\nimport { Trace } from './model/trace';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TrackingService {\n  tracesMockCache: Trace[];\n\n  constructor(private http: HttpClient) { }\n\n  get(domainId: string, traceType: string, objectId: string, startTimestamp: string): Observable<Trace[]> {    \n    let host = PropertiesService.properties.aurionTrack;\n    return this.http.get<Trace[]>(`${host}/trace/${domainId}/${objectId}/${traceType}?startTimestamp=${startTimestamp}`)\n  }\n\n  getByType(domainId: string, traceType: string): Observable<Trace[]> {\n    let host = PropertiesService.properties.aurionTrack;\n    return this.http.get<Trace[]>(`${host}/state/${domainId}/${traceType}`)\n  }\n\n  getLatestByDomainsAndTag(domains: string[], tag: string) {\n    if (PropertiesService.properties.trackingsmock) {\n      return this.http.get<Trace[]>(PropertiesService.properties.trackingsmock).pipe(map(traces => {\n        traces = traces.filter(item => domains.indexOf(item.domainId) != -1).filter(item => item.tags?.find(itemTag => itemTag == tag));\n        let grouped = _.groupBy(traces, trace => trace.objectId);\n        let states = Object.keys(grouped).map(key => grouped[key]).map(group => group.sort((o1, o2) => o2.timestamp - o1.timestamp)[0]);\n        return states;\n      }));\n    }\n  }\n\n  set(trace: Trace): Observable<any> {\n    // if (PropertiesService.properties.trackingsmock) {\n    //   if (!this.tracesMockCache) {\n    //     this.tracesMockCache = [];\n    //   }\n    //   let idx = this.tracesMockCache.findIndex(item => item.objectId == trace.objectId);\n    //   if (idx != -1) {\n    //     this.tracesMockCache.splice(idx, 0, trace);\n    //   } else {\n    //     this.tracesMockCache.push(trace);\n    //   }\n    //   return of(1);\n    // } else {\n      let host = PropertiesService.properties.aurionTrack;\n      return this.http.post<Trace>(`${host}/trace`, trace);\n    // }\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PropertiesService } from '../properties.service';\nimport { Event } from './model/event';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  getEventsBySubject(domainId: string, subject: string, startTimestamp: number, search?: string): Observable<Event[]> {\n    let host = PropertiesService.properties.aurionEvent;\n    let url = `${host}/event/subject/${domainId}/${subject}?startTimestamp=${startTimestamp}`;\n    if(search != null){\n      url += \"&search=\" + search ;\n    }\n    return this.http.get<Event[]>(url);\n  }\n\n  getEvents(domainId: string, objectId: string, startTimestamp: number): Observable<Event[]> {\n    let host = PropertiesService.properties.aurionEvent;\n    let url = `${host}/event/object/${domainId}/${objectId}?startTimestamp=${startTimestamp}`;\n    return this.http.get<Event[]>(url);\n  }\n\n}","import { Injectable } from '@angular/core';\nimport * as auth0 from 'auth0-js';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { PropertiesService } from './properties.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Auth0AuthService {\n  innerwebAuth: auth0.WebAuth;\n  user;\n\n  extraRedirectUri;\n\n  constructor() {\n  }\n\n  private get webAuth(): auth0.WebAuth {\n    if (this.innerwebAuth == null) {\n      this.innerwebAuth = new auth0.WebAuth({\n        clientID: PropertiesService.properties.auth0.clientId,\n        domain: PropertiesService.properties.auth0.domain,\n        scope: 'openid profile email current_user',\n        responseType: 'token id_token code',\n        redirectUri: PropertiesService.properties.auth0.redirectUri + (this.extraRedirectUri ? this.extraRedirectUri : '')\n      });\n    }\n    return this.innerwebAuth;\n  }\n\n  authenticate(username: string, password: string, redirectUri?: string): Observable<boolean> {\n    this.extraRedirectUri = redirectUri;\n    let behaviorSubject = new BehaviorSubject<boolean>(false);\n    this.webAuth.login({\n      realm: PropertiesService.properties.auth0.realm,\n      username: username,\n      password: password\n    }, (err, res) => {\n      if (err != null) {\n        console.error('UsuÃ¡rio e/ou senha errados.');\n        throwError('UsuÃ¡rio e/ou senha errados.');\n      }\n      this.user = res;\n      console.log(res);\n      behaviorSubject.next(true);\n    });\n    return behaviorSubject;\n  }\n\n  public forgotPassword(email: string): Observable<boolean> {\n    let behaviorSubject = new BehaviorSubject<boolean>(false);\n    this.webAuth.changePassword({\n      connection: PropertiesService.properties.auth0.realm,\n      email\n    }, (err, resp) => {\n      if (err) {\n        console.error(err);\n        throwError(JSON.stringify(err));\n      }\n      behaviorSubject.next(true);\n    });\n    return behaviorSubject;\n  }\n\n  public async handleAuthentication(): Promise<any> {\n    //this.setIsOnHandleAuthenticationCallback(true);\n\n    await new Promise((resolve, reject) => {\n      this.webAuth.parseHash((err, authResult) => {\n        console.log(authResult);\n        if (err) {\n          console.error(err)\n          reject(err);\n        } else {\n          resolve(authResult);\n        }\n      });\n    }).then((authResult: any) => {\n      console.log(authResult)\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        this.setUser(authResult)\n      }\n    })\n      .catch((err) => {\n        console.error(err);\n        /* this.loaderService.hideLoader();\n        this.router.navigate(['/']);\n        this.alertService.showMessage(err.errorDescription);\n        return Promise.reject(err); */\n      });\n  }\n\n  private setUser(user) {\n    this.user = user;\n    sessionStorage.setItem('user', JSON.stringify(user));\n  }\n\n  getUser() {\n    let userJSON = sessionStorage.getItem('user');\n    if (userJSON != null && userJSON != '') {\n      this.user = JSON.parse(userJSON);\n    }\n    return this.user;\n  }\n\n  isUserLoggedIn(): boolean {\n    let user = this.getUser();\n    return user != null;\n  }\n\n  logout() {\n    this.user = null;\n    sessionStorage.removeItem('user');\n  }\n\n}","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [],\n  imports: [HttpClientModule\n  ],\n  exports: []\n})\nexport class NgBaseLibModule { }\n","/*\n * Public API Surface of ng-base-lib\n */\n\nexport * from './lib/aurion2/model/trace';\nexport * from './lib/aurion2/model/event';\nexport * from './lib/aurion2/state.service';\nexport * from './lib/aurion2/structure.service';\nexport * from './lib/aurion2/tracking-websocket.service';\nexport * from './lib/aurion2/event-websocket.service';\nexport * from './lib/aurion2/tracking.service';\nexport * from './lib/aurion2/event.service';\nexport * from './lib/auth0-auth.service';\nexport * from './lib/ng-base-lib.module';\nexport * from './lib/properties.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["observableThrowError","_.groupBy","auth0.WebAuth"],"mappings":"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"}